import pandas as pd
from app import app, db
from models import Question

# üìå –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
file_path = "C:\\Users\\epcsa\\Downloads\\Agile.xlsx"

# üìå –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
df = pd.read_excel(file_path, header=0)

# üîπ –ß–∏—Å—Ç–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ –æ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫
df.columns = df.columns.str.strip().str.replace("\n", "")

# üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
print("–ù–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ –≤ —Ñ–∞–π–ª–µ:", df.columns.tolist())

# üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
expected_columns = [
    "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è", "–í–æ–ø—Ä–æ—Å—ã",
    "–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å", "–ü–µ—Ä–µ—Ö–æ–¥–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å", "–†–∞—Å—Ç—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å",
    "–£—Ä–æ–≤–µ–Ω—å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏", "–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å"
]
for col in expected_columns:
    if col not in df.columns:
        raise ValueError(f"‚ùå –û—à–∏–±–∫–∞: –ö–æ–ª–æ–Ω–∫–∞ '{col}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ñ–∞–π–ª–µ!")

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤
with app.app_context():
    for _, row in df.iterrows():
        category = row["–ö–∞—Ç–µ–≥–æ—Ä–∏—è"]
        subcategory = row["–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è"]
        question_text = row["–í–æ–ø—Ä–æ—Å—ã"]
        level_basic = row["–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å"]
        level_transitional = row["–ü–µ—Ä–µ—Ö–æ–¥–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å"]
        level_growing = row["–†–∞—Å—Ç—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å"]
        level_normalization = row["–£—Ä–æ–≤–µ–Ω—å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏"]
        level_optimal = row["–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å"]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—É—Å—Ç—ã–µ
        if pd.isna(category) or pd.isna(subcategory) or pd.isna(question_text):
            print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {row}")
            continue

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É
        question = Question(
            category=str(category).strip(),
            subcategory=str(subcategory).strip(),
            question=str(question_text).strip(),
            level_basic=str(level_basic).strip() if pd.notna(level_basic) else None,
            level_transitional=str(level_transitional).strip() if pd.notna(level_transitional) else None,
            level_growing=str(level_growing).strip() if pd.notna(level_growing) else None,
            level_normalization=str(level_normalization).strip() if pd.notna(level_normalization) else None,
            level_optimal=str(level_optimal).strip() if pd.notna(level_optimal) else None,
        )

        db.session.add(question)

    db.session.commit()
    print("‚úÖ –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")

